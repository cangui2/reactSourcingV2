[{"D:\\Dev\\reactSourcingV2\\src\\index.js":"1","D:\\Dev\\reactSourcingV2\\src\\component\\results.js":"2","D:\\Dev\\reactSourcingV2\\src\\component\\search.js":"3","D:\\Dev\\reactSourcingV2\\src\\component\\details.js":"4","D:\\Dev\\reactSourcingV2\\src\\component\\CVViewer.js":"5"},{"size":2350,"mtime":1610437550394,"results":"6","hashOfConfig":"7"},{"size":1884,"mtime":1610615153482,"results":"8","hashOfConfig":"7"},{"size":7294,"mtime":1610548235070,"results":"9","hashOfConfig":"7"},{"size":744,"mtime":1610437550394,"results":"10","hashOfConfig":"7"},{"size":6852,"mtime":1610615568491,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1q000gm",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Dev\\reactSourcingV2\\src\\index.js",["26","27"],"import ReactDOM from 'react-dom';\r\nimport React, {useState} from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport axios from 'axios'\r\nimport Search from \"./component/search\";\r\nimport Results from \"./component/results\";\r\nimport Details from \"./component/details\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nconst App = (props) => {\r\n    // all const\r\n    const [liste, setListe] = useState([]);\r\n    const [item, setItem] = useState(null);\r\n    const [cvCandidat, setCvCandidat] = useState([]);\r\n    /*-------------------------------------------------------------*/\r\n    const handleCvRequest = (param) => {\r\n\r\n        // param -> keyword=sql&ville=amiens&recruteur=12\r\n        console.log(param);\r\n        console.log(axios.get(`https://127.0.0.1:8000/api/sourcing?`+ param));\r\n        axios.get(`https://127.0.0.1:8000/api/sourcing?`+ param)\r\n\r\n            .then((result) => {\r\n\r\n                setListe(result.data);\r\n                console.log(result.data)\r\n                setCvCandidat([]);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    // Cv Candidat\r\n\r\n\r\n    const handleCv = (cv) => {\r\n        console.log(cv + 'requete id');\r\n        console.log(axios.get(`https://127.0.0.1:8000/api/c_vs?metier.id=` + cv));\r\n        axios.get(`https://127.0.0.1:8000/api/c_vs?id=` + cv)\r\n            .then((result) => {\r\n\r\n                setCvCandidat(result.data[0]);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container fluid style={styleSearch}>\r\n            <Row>\r\n                <Col sm={3}>\r\n                    <Search\r\n                        onDemandeCvChanged={(param) => handleCvRequest(param)}\r\n\r\n                    />\r\n                </Col>\r\n\r\n                <Col sm={4} md={5} style={border}>\r\n                    <Results liste={liste} onReceiveCv={(cv) => handleCv(cv)}/>\r\n                </Col>\r\n\r\n                <Col sm={5} md={4} style={border}>\r\n                    <Details cv={cvCandidat}/>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst styleSearch = {\r\n\r\n\r\n    minHeight: \"90vh\",\r\n\r\n\r\n}\r\n\r\nconst border = {\r\n\r\n\r\n    minHeight: \"90vh\",\r\n\r\n\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('react_sourcing')\r\n);\r\n\r\n\r\n",["28","29"],"D:\\Dev\\reactSourcingV2\\src\\component\\results.js",["30","31","32","33","34","35"],"D:\\Dev\\reactSourcingV2\\src\\component\\search.js",["36","37","38","39","40","41","42","43","44"],"import {ButtonGroup, Col, Container, Form, Row, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport AsyncSelect from 'react-select/async';\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from 'axios'\r\nimport {Range} from \"react-range\";\r\n\r\n\r\n\r\nfunction Search(props) {\r\n\r\n    // All constant useState\r\n    const [valueMetier, setValueMetier] = useState([]);\r\n    const [valueVille, setValueVille] = useState('');\r\n    const [keyWord, setKeyWord] = useState('');\r\n    const [recruteur, setRecruteur] = useState('6');\r\n    const [statusAll, setStatusALL] = useState(false);\r\n    const [statusRecruteur, setStatusRecruteur] = useState(false);\r\n    const [checked, setChecked] = useState('info');\r\n    const [range, setRange] = useState([1]);\r\n    const [finalRange, setFinalRange] = useState([1]);\r\n    const [disabled,setDisabled]=useState(true);\r\n\r\n\r\n\r\n    // Recherche Api\r\n    const loadOptionMetier = (valueMetier, callback) => {\r\n        console.log(axios.get(\"https://127.0.0.1:8000/api/metiers?libelle=\" + valueMetier))\r\n        axios.get(\"https://127.0.0.1:8000/api/metiers?libelle=\" + valueMetier)\r\n            .then((met) => {\r\n                callback(met.data);\r\n            });\r\n    }\r\n    const loadOtionVille = (value, callback) => {\r\n        axios.get(\"https://127.0.0.1:8000/api/villes?nom=\" + value)\r\n            .then((vil) => {\r\n                callback(vil.data);\r\n            });\r\n    }\r\n\r\n\r\n    // Si la valeur change on modifie.\r\n    const handleChangeMetier = value => {\r\n        setValueMetier(value);\r\n\r\n    }\r\n    const changeParam = () => {\r\n        let params = [];\r\n            if (keyWord) {\r\n                params.push('keyword=' + keyWord);\r\n            }\r\n            if (statusRecruteur) {\r\n                params.push('recruteur=6');\r\n            }\r\n            if (valueVille){\r\n                params.push('ville='+valueVille);\r\n                params.push('rayon='+range);\r\n            }\r\n\r\n            props.onDemandeCvChanged(params.join(\"&\"));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        changeParam();\r\n    }, [keyWord, valueVille, finalRange,statusRecruteur])\r\n\r\n\r\n    return (\r\n        <Container style={styleSearch}>\r\n            <Row style={{marginLeft: '0', marginRight: '0', paddingTop: '10px'}}>\r\n                <Col>\r\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                    <ToggleButton\r\n                        type=\"checkbox\"\r\n                        variant='info'\r\n                        value={2}\r\n                        onChange={event => setStatusRecruteur(true)}\r\n                        //onClick={setStatusRecruteur(true)}\r\n                    >\r\n                        Ma Cvthèque\r\n                    </ToggleButton>\r\n\r\n                        &emsp;\r\n\r\n                    <ToggleButton\r\n                        type=\"radio\"\r\n                        variant=\"info\"\r\n                        value={1}\r\n                        onChange={event => setStatusRecruteur(false)}\r\n                        //onClick={}\r\n                    >\r\n                        Candidathèque\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n                                    </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group controlId=\"formGridAddress1\">\r\n                        <Form.Label>Mot clé</Form.Label>\r\n                        <Form.Control\r\n                            placeholder=\"Metier, Competence ...\"\r\n                            onChange={e=>{setKeyWord(e.target.value)}}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group controlId=\"formGridState\">\r\n                        <Form.Label>Metier</Form.Label>\r\n                        <AsyncSelect\r\n                            className=\"mb-2\"\r\n                            loadOptions={loadOptionMetier}\r\n                            getOptionLabel={met => met.libelle}\r\n                            //getOptionLabel={ (met) => { return met.nom } }\r\n                            components={{DropdownIndicator: () => null, IndicatorSeparator: () => null}}\r\n                            placeholder=\"Saisissez le metier\"\r\n                            onChange={handleChangeMetier}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form.Group controlId=\"formGridState\">\r\n                        <Form.Label>Ville</Form.Label>\r\n                        <AsyncSelect\r\n                            className=\"mb-2\"\r\n                            loadOptions={loadOtionVille}\r\n                            getOptionLabel={vil => vil.nom}\r\n                            isClearable={true}\r\n                            //getOptionLabel={ (met) => { return met.nom } }\r\n                            components={{DropdownIndicator: () => null, IndicatorSeparator: () => null}}\r\n                            placeholder=\"Saisissez la ville..\"\r\n                            onChange={value=>{setValueVille(value.id);setDisabled(false)}}\r\n                            //onInputChange={changeParam}\r\n                        />\r\n                    </Form.Group>\r\n                    <Range\r\n                        step={0.1}\r\n                        min={1}\r\n                        max={150}\r\n                        values={range}\r\n                        disabled={disabled}\r\n                        onChange={values => setRange(values)}\r\n                        onFinalChange={values => setFinalRange(values)}\r\n                        renderTrack={({props, children}) => (\r\n                            <div\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n                                    height: '6px',\r\n                                    width: '100%',\r\n                                    backgroundColor: '#ccc'\r\n                                }}\r\n                            >\r\n                                {children}\r\n                            </div>\r\n                        )}\r\n                        renderThumb={({props}) => (\r\n                            <div\r\n\r\n                                {...props}\r\n                                style={{\r\n                                    ...props.style,\r\n\r\n                                    height: '22px',\r\n                                    width: '22px',\r\n                                    backgroundColor: '#999'\r\n                                }}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <output style={{marginTop: \"30px\" }} id=\"output\">\r\n                        Distance sélectionner {range-1} Km\r\n                    </output>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n};\r\nconst styleSearch = {\r\n\r\n    //border:'2px solid #000000',\r\n    backgroundColor: 'white',\r\n    opacity: '0.9',\r\n    marginTop: '10px',\r\n    boxShadow: \"10px 10px 1px #9E9E9E\",\r\n    minHeight: '90vh',\r\n    maxWidth: '395px',\r\n\r\n\r\n}\r\nexport default Search;\r\n","D:\\Dev\\reactSourcingV2\\src\\component\\details.js",["45","46","47","48","49","50","51","52","53","54","55"],"import React, {useState} from \"react\";\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {pdfjs} from 'react-pdf'\r\nimport image from \"../avatar.png\";\r\nimport CVViewer from \"./CVViewer\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nfunction Details (props) {\r\n\r\n\r\n\r\n    if (props.cv.length !== 0)\r\n        return (\r\n                <CVViewer cv={props.cv} />\r\n        )\r\n    else if (props.cv.length === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n\r\n\r\nconst styleSearch = {\r\n\r\n    //border:'2px solid #000000',\r\n    width: '38rem',\r\n    marginTop: '10px',\r\n    boxShadow: \"1px 1px 1px #9E9E9E\",\r\n    backgroundColor: 'white',\r\n    opacity: '0.9',\r\n\r\n}\r\n","D:\\Dev\\reactSourcingV2\\src\\component\\CVViewer.js",["56","57","58","59"],{"ruleId":"60","severity":1,"message":"61","line":15,"column":12,"nodeType":"62","messageId":"63","endLine":15,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":15,"column":18,"nodeType":"62","messageId":"63","endLine":15,"endColumn":25},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"69","line":1,"column":9,"nodeType":"62","messageId":"63","endLine":1,"endColumn":18},{"ruleId":"60","severity":1,"message":"70","line":1,"column":36,"nodeType":"62","messageId":"63","endLine":1,"endColumn":46},{"ruleId":"60","severity":1,"message":"71","line":1,"column":55,"nodeType":"62","messageId":"63","endLine":1,"endColumn":60},{"ruleId":"60","severity":1,"message":"72","line":1,"column":62,"nodeType":"62","messageId":"63","endLine":1,"endColumn":68},{"ruleId":"60","severity":1,"message":"73","line":1,"column":83,"nodeType":"62","messageId":"63","endLine":1,"endColumn":88},{"ruleId":"60","severity":1,"message":"74","line":69,"column":7,"nodeType":"62","messageId":"63","endLine":69,"endColumn":11},{"ruleId":"60","severity":1,"message":"75","line":1,"column":9,"nodeType":"62","messageId":"63","endLine":1,"endColumn":20},{"ruleId":"60","severity":1,"message":"76","line":12,"column":12,"nodeType":"62","messageId":"63","endLine":12,"endColumn":23},{"ruleId":"60","severity":1,"message":"77","line":15,"column":12,"nodeType":"62","messageId":"63","endLine":15,"endColumn":21},{"ruleId":"60","severity":1,"message":"78","line":15,"column":23,"nodeType":"62","messageId":"63","endLine":15,"endColumn":35},{"ruleId":"60","severity":1,"message":"79","line":16,"column":12,"nodeType":"62","messageId":"63","endLine":16,"endColumn":21},{"ruleId":"60","severity":1,"message":"80","line":16,"column":23,"nodeType":"62","messageId":"63","endLine":16,"endColumn":35},{"ruleId":"60","severity":1,"message":"81","line":18,"column":12,"nodeType":"62","messageId":"63","endLine":18,"endColumn":19},{"ruleId":"60","severity":1,"message":"82","line":18,"column":21,"nodeType":"62","messageId":"63","endLine":18,"endColumn":31},{"ruleId":"83","severity":1,"message":"84","line":65,"column":8,"nodeType":"85","endLine":65,"endColumn":57,"suggestions":"86"},{"ruleId":"60","severity":1,"message":"87","line":1,"column":16,"nodeType":"62","messageId":"63","endLine":1,"endColumn":24},{"ruleId":"60","severity":1,"message":"72","line":2,"column":9,"nodeType":"62","messageId":"63","endLine":2,"endColumn":15},{"ruleId":"60","severity":1,"message":"88","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":21},{"ruleId":"60","severity":1,"message":"89","line":2,"column":23,"nodeType":"62","messageId":"63","endLine":2,"endColumn":26},{"ruleId":"60","severity":1,"message":"69","line":2,"column":28,"nodeType":"62","messageId":"63","endLine":2,"endColumn":37},{"ruleId":"60","severity":1,"message":"90","line":2,"column":39,"nodeType":"62","messageId":"63","endLine":2,"endColumn":44},{"ruleId":"60","severity":1,"message":"91","line":2,"column":46,"nodeType":"62","messageId":"63","endLine":2,"endColumn":49},{"ruleId":"60","severity":1,"message":"92","line":3,"column":9,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"93","line":4,"column":8,"nodeType":"62","messageId":"63","endLine":4,"endColumn":13},{"ruleId":"60","severity":1,"message":"94","line":6,"column":13,"nodeType":"62","messageId":"63","endLine":6,"endColumn":22},{"ruleId":"60","severity":1,"message":"95","line":29,"column":7,"nodeType":"62","messageId":"63","endLine":29,"endColumn":18},{"ruleId":"60","severity":1,"message":"72","line":2,"column":9,"nodeType":"62","messageId":"63","endLine":2,"endColumn":15},{"ruleId":"60","severity":1,"message":"88","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":21},{"ruleId":"60","severity":1,"message":"69","line":2,"column":23,"nodeType":"62","messageId":"63","endLine":2,"endColumn":32},{"ruleId":"96","severity":1,"message":"97","line":27,"column":59,"nodeType":"98","endLine":27,"endColumn":136},"no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","'setItem' is assigned a value but never used.","no-native-reassign",["99"],"no-negated-in-lhs",["100"],"'Container' is defined but never used.","'Pagination' is defined but never used.","'Media' is defined but never used.","'Button' is defined but never used.","'Badge' is defined but never used.","'test' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'valueMetier' is assigned a value but never used.","'recruteur' is assigned a value but never used.","'setRecruteur' is assigned a value but never used.","'statusAll' is assigned a value but never used.","'setStatusALL' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeParam'. Either include it or remove the dependency array.","ArrayExpression",["101"],"'useState' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'pdfjs' is defined but never used.","'image' is defined but never used.","'PropTypes' is defined but never used.","'styleSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [keyWord, valueVille, finalRange, statusRecruteur, changeParam]",{"range":"104","text":"105"},[2074,2123],"[keyWord, valueVille, finalRange, statusRecruteur, changeParam]"]