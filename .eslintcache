[{"D:\\Dev\\reactSourcingV2\\src\\index.js":"1","D:\\Dev\\reactSourcingV2\\src\\component\\results.js":"2","D:\\Dev\\reactSourcingV2\\src\\component\\search.js":"3","D:\\Dev\\reactSourcingV2\\src\\component\\details.js":"4","D:\\Dev\\reactSourcingV2\\src\\component\\CVViewer.js":"5"},{"size":2350,"mtime":1610437550394,"results":"6","hashOfConfig":"7"},{"size":1637,"mtime":1609857646699,"results":"8","hashOfConfig":"7"},{"size":7554,"mtime":1610537456657,"results":"9","hashOfConfig":"7"},{"size":744,"mtime":1610437550394,"results":"10","hashOfConfig":"7"},{"size":6854,"mtime":1610437550394,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1q000gm",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},"D:\\Dev\\reactSourcingV2\\src\\index.js",["27","28"],"import ReactDOM from 'react-dom';\r\nimport React, {useState} from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport axios from 'axios'\r\nimport Search from \"./component/search\";\r\nimport Results from \"./component/results\";\r\nimport Details from \"./component/details\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nconst App = (props) => {\r\n    // all const\r\n    const [liste, setListe] = useState([]);\r\n    const [item, setItem] = useState(null);\r\n    const [cvCandidat, setCvCandidat] = useState([]);\r\n    /*-------------------------------------------------------------*/\r\n    const handleCvRequest = (param) => {\r\n\r\n        // param -> keyword=sql&ville=amiens&recruteur=12\r\n        console.log(param);\r\n        console.log(axios.get(`https://127.0.0.1:8000/api/sourcing?`+ param));\r\n        axios.get(`https://127.0.0.1:8000/api/sourcing?`+ param)\r\n\r\n            .then((result) => {\r\n\r\n                setListe(result.data);\r\n                console.log(result.data)\r\n                setCvCandidat([]);\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n    // Cv Candidat\r\n\r\n\r\n    const handleCv = (cv) => {\r\n        console.log(cv + 'requete id');\r\n        console.log(axios.get(`https://127.0.0.1:8000/api/c_vs?metier.id=` + cv));\r\n        axios.get(`https://127.0.0.1:8000/api/c_vs?id=` + cv)\r\n            .then((result) => {\r\n\r\n                setCvCandidat(result.data[0]);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container fluid style={styleSearch}>\r\n            <Row>\r\n                <Col sm={3}>\r\n                    <Search\r\n                        onDemandeCvChanged={(param) => handleCvRequest(param)}\r\n\r\n                    />\r\n                </Col>\r\n\r\n                <Col sm={4} md={5} style={border}>\r\n                    <Results liste={liste} onReceiveCv={(cv) => handleCv(cv)}/>\r\n                </Col>\r\n\r\n                <Col sm={5} md={4} style={border}>\r\n                    <Details cv={cvCandidat}/>\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst styleSearch = {\r\n\r\n\r\n    minHeight: \"90vh\",\r\n\r\n\r\n}\r\n\r\nconst border = {\r\n\r\n\r\n    minHeight: \"90vh\",\r\n\r\n\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('react_sourcing')\r\n);\r\n\r\n\r\n",["29","30"],"D:\\Dev\\reactSourcingV2\\src\\component\\results.js",["31","32","33","34"],"import {Container, Row, Card, Col, Pagination, Image, Media, Button, CardColumns} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport image from \"../avatar.png\"\r\n\r\n\r\nfunction Results (props){\r\n\r\n\r\n    return(\r\n\r\n\r\n            <Row>\r\n                <Col>\r\n\r\n                    {props.liste.map(item => (\r\n                        <div onClick={()=>{props.onReceiveCv(item.id)}}>\r\n                            <CardColumns>\r\n                            <Card style={styleSearch} >\r\n\r\n                                <Card.Body  >\r\n                                    <Card.Title>{item.nom} </Card.Title> <Image style={{float: 'right',width:'15%'}} src={image} roundedCircle />\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">{item.prenom}</Card.Subtitle>\r\n                                    <Card.Text>\r\n                                        Adresse :{item.adresse}\r\n                                        <br/>\r\n                                        Ville:{item.ville}\r\n                                        <br/>\r\n                                        Numero de Telephone : {item.telephone}\r\n\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                            </CardColumns>\r\n                        </div>\r\n                    ))}\r\n\r\n                </Col>\r\n            </Row>\r\n    )\r\n\r\n\r\n\r\n};\r\n\r\nexport default Results;\r\nconst styleSearch={\r\n\r\n\r\n    width: '38rem',\r\n    marginTop:'10px',\r\n    boxShadow: \"10px 10px 1px #9E9E9E\",\r\n    backgroundColor:'white',\r\n    opacity:'0.9',\r\n\r\n\r\n}\r\n\r\n","D:\\Dev\\reactSourcingV2\\src\\component\\search.js",["35","36","37","38","39","40","41","42"],"D:\\Dev\\reactSourcingV2\\src\\component\\details.js",["43","44","45","46","47","48","49","50","51","52","53"],"import React, {useState} from \"react\";\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport {pdfjs} from 'react-pdf'\r\nimport image from \"../avatar.png\";\r\nimport CVViewer from \"./CVViewer\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\n\r\n\r\n\r\nfunction Details (props) {\r\n\r\n\r\n\r\n    if (props.cv.length !== 0)\r\n        return (\r\n                <CVViewer cv={props.cv} />\r\n        )\r\n    else if (props.cv.length === 0) {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n\r\n\r\nconst styleSearch = {\r\n\r\n    //border:'2px solid #000000',\r\n    width: '38rem',\r\n    marginTop: '10px',\r\n    boxShadow: \"1px 1px 1px #9E9E9E\",\r\n    backgroundColor: 'white',\r\n    opacity: '0.9',\r\n\r\n}\r\n","D:\\Dev\\reactSourcingV2\\src\\component\\CVViewer.js",["54","55","56","57"],"import React from 'react';\r\nimport {Button, Card, Container} from 'react-bootstrap';\r\nimport avatar from '../avatar.png'\r\n\r\nimport './CV.css';\r\nimport * as PropTypes from \"prop-types\";\r\n\r\n\r\nclass Fragment extends React.Component {\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nFragment.propTypes = {children: PropTypes.node};\r\nconst CVViewer = (props) => {\r\nconsole.log(props.cv);\r\n\r\n        return (\r\n\r\n\r\n                    <div className=\"paper\"style={paperStyle}>\r\n                        <link rel=\"stylesheet\" href=\"/template3-7.css\" />\r\n                        <section className=\"identite\">\r\n                                <div className=\"nom\">{props.cv.candidat.prenom} {props.cv.candidat.nom}</div>\r\n                            <section className=\"photo\">\r\n                                <div className=\"portrait\"><img src={avatar} style={{width:'15%',paddingTop:'32px',paddingLeft:'3px'}}/></div>\r\n                            </section>\r\n                            </section>\r\n\r\n\r\n\r\n                        <section className=\"profil\">\r\n\r\n                            <header>Contact</header>\r\n\r\n                            <div className=\"adresse\">{props.cv.candidat.adresse}</div>\r\n                            <div className=\"ville\">{props.cv.candidat.ville}</div>\r\n                            <div className=\"phone\">{props.cv.candidat.telephone}</div>\r\n                            <div className=\"email\">{props.cv.candidat.email}</div>\r\n\r\n                        </section>\r\n\r\n\r\n                        <section className=\"titre\">\r\n\r\n                            <div className=\"poste\">{props.cv.metier.libelle}</div>\r\n\r\n                        </section>\r\n\r\n                        <section className=\"intro\">\r\n                            <header>Profil</header>\r\n\r\n                            <div className=\"text\">{props.cv.titre}</div>\r\n\r\n                        </section>\r\n\r\n                        <section className=\"experiences\">\r\n                            <header>Experiences</header>\r\n                            <div >\r\n                                {props.cv.experiences.map(experience => (\r\n                                        <div className=\"experience\"  >\r\n                                            <div className=\"date-debut\">{experience.dateDebut}</div>\r\n                                            <div className=\"date-fin\">{experience.dateFin}</div>\r\n                                            <div className=\"entreprise\">{experience.entreprise}</div>\r\n                                            <div className=\"ville\">{experience.ville}</div>\r\n                                            <div className=\"logo\">{experience.logo}</div>\r\n                                            <div className=\"titre\">{experience.titre}</div>\r\n                                            <div className=\"desciption\">{experience.description}</div>\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"formations\">\r\n                            <header>Formations</header>\r\n                            <div >\r\n                                {props.cv.formations.map(formations => (\r\n                                        <div className=\"formation\"  >\r\n                                            <div className=\"date-debut\">{formations.dateDebut}</div>\r\n                                            <div className=\"date-fin\">{formations.dateFin}</div>\r\n                                            <div className=\"ecole\">{formations.ecole}</div>\r\n                                            <div className=\"titre\">{formations.diplome}</div>\r\n                                            <div className=\"niveau\">{formations.niveau}</div>\r\n                                            <div className=\"desciption\">{formations.description}</div>\r\n                                        </div>\r\n                                ))}\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className=\"competences\">\r\n                            <header>Competences</header>\r\n                            <div >\r\n                                {\r\n                                    props.cv.competences.map((competence, index) =>\r\n                                        <div className=\"competence\"  key={index}>\r\n                                            <div className=\"libelle\">{competence.libelle}</div>\r\n                                            <div className={\"niveau niveau-\" + competence.niveau}>{competence.niveau}</div>\r\n                                            <meter max=\"5\" value={competence.niveau}></meter>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"langues\">\r\n                            <header>Langues</header>\r\n                            <div >\r\n                                {\r\n                                    props.cv.langues.map((langue, index) =>\r\n                                        <div className=\"langue\"  key={index}>\r\n                                            <div className=\"libelle\">{langue.libelle}</div>\r\n                                            <div className=\"niveau\">{langue.niveau}</div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"reseaux\">\r\n                            <header>Réseaux</header>\r\n                            <div >\r\n                                {\r\n                                    props.cv.reseaux.map((reseau, index) =>\r\n                                        <div className=\"reseau\"  key={index}>\r\n                                            <div className=\"libelle no-screen\">{reseau.type}</div>\r\n                                            <div className=\"libelle no-screen\">{reseau.url}</div>\r\n                                            <div className=\"niveau no-print\">\r\n                                                <a href=\"{reseau.url}\">{reseau.type}</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </section>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n        );\r\n\r\n}\r\n\r\nexport default CVViewer;\r\n\r\nconst paperStyle ={\r\n\r\n    marginTop:'0px',\r\n    transform:'scale(1)',\r\n    gridTemplateRows:'',\r\n    //width:'auto'\r\n   // marginRight:'-120px'\r\n}\r\n",{"ruleId":"58","severity":1,"message":"59","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":16},{"ruleId":"58","severity":1,"message":"62","line":15,"column":18,"nodeType":"60","messageId":"61","endLine":15,"endColumn":25},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"58","severity":1,"message":"67","line":1,"column":9,"nodeType":"60","messageId":"61","endLine":1,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":1,"column":36,"nodeType":"60","messageId":"61","endLine":1,"endColumn":46},{"ruleId":"58","severity":1,"message":"69","line":1,"column":55,"nodeType":"60","messageId":"61","endLine":1,"endColumn":60},{"ruleId":"58","severity":1,"message":"70","line":1,"column":62,"nodeType":"60","messageId":"61","endLine":1,"endColumn":68},{"ruleId":"58","severity":1,"message":"71","line":12,"column":12,"nodeType":"60","messageId":"61","endLine":12,"endColumn":23},{"ruleId":"58","severity":1,"message":"72","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":21},{"ruleId":"58","severity":1,"message":"73","line":15,"column":23,"nodeType":"60","messageId":"61","endLine":15,"endColumn":35},{"ruleId":"58","severity":1,"message":"74","line":16,"column":12,"nodeType":"60","messageId":"61","endLine":16,"endColumn":21},{"ruleId":"58","severity":1,"message":"75","line":16,"column":23,"nodeType":"60","messageId":"61","endLine":16,"endColumn":35},{"ruleId":"58","severity":1,"message":"76","line":18,"column":12,"nodeType":"60","messageId":"61","endLine":18,"endColumn":19},{"ruleId":"58","severity":1,"message":"77","line":18,"column":21,"nodeType":"60","messageId":"61","endLine":18,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":72,"column":8,"nodeType":"80","endLine":72,"endColumn":41,"suggestions":"81"},{"ruleId":"58","severity":1,"message":"82","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"70","line":2,"column":9,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"83","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":21},{"ruleId":"58","severity":1,"message":"84","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"67","line":2,"column":28,"nodeType":"60","messageId":"61","endLine":2,"endColumn":37},{"ruleId":"58","severity":1,"message":"85","line":2,"column":39,"nodeType":"60","messageId":"61","endLine":2,"endColumn":44},{"ruleId":"58","severity":1,"message":"86","line":2,"column":46,"nodeType":"60","messageId":"61","endLine":2,"endColumn":49},{"ruleId":"58","severity":1,"message":"87","line":3,"column":9,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"88","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"89","line":6,"column":13,"nodeType":"60","messageId":"61","endLine":6,"endColumn":22},{"ruleId":"58","severity":1,"message":"90","line":29,"column":7,"nodeType":"60","messageId":"61","endLine":29,"endColumn":18},{"ruleId":"58","severity":1,"message":"70","line":2,"column":9,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"83","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":21},{"ruleId":"58","severity":1,"message":"67","line":2,"column":23,"nodeType":"60","messageId":"61","endLine":2,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":27,"column":59,"nodeType":"93","endLine":27,"endColumn":136},"no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar","'setItem' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'Container' is defined but never used.","'Pagination' is defined but never used.","'Media' is defined but never used.","'Button' is defined but never used.","'valueMetier' is assigned a value but never used.","'recruteur' is assigned a value but never used.","'setRecruteur' is assigned a value but never used.","'statusAll' is assigned a value but never used.","'setStatusALL' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeParam'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'useState' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'Row' is defined but never used.","'pdfjs' is defined but never used.","'image' is defined but never used.","'PropTypes' is defined but never used.","'styleSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [keyWord, valueVille, finalRange, changeParam]",{"range":"99","text":"100"},[2278,2311],"[keyWord, valueVille, finalRange, changeParam]"]